#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BudgetGuru.DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BudgetGuru")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill_History(Bill_History instance);
    partial void UpdateBill_History(Bill_History instance);
    partial void DeleteBill_History(Bill_History instance);
    partial void InsertBill_Item(Bill_Item instance);
    partial void UpdateBill_Item(Bill_Item instance);
    partial void DeleteBill_Item(Bill_Item instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::BudgetGuru.DataLayer.Properties.Settings.Default.BudgetGuruConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill_History> Bill_Histories
		{
			get
			{
				return this.GetTable<Bill_History>();
			}
		}
		
		public System.Data.Linq.Table<Bill_Item> Bill_Items
		{
			get
			{
				return this.GetTable<Bill_Item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill_History")]
	public partial class Bill_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bill_History_Id;
		
		private int _BillId;
		
		private System.Nullable<System.DateTime> _BillDate;
		
		private EntityRef<Bill_History> _Bill_History2;
		
		private EntityRef<Bill_History> _Bill_History1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBill_History_IdChanging(int value);
    partial void OnBill_History_IdChanged();
    partial void OnBillIdChanging(int value);
    partial void OnBillIdChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    #endregion
		
		public Bill_History()
		{
			this._Bill_History2 = default(EntityRef<Bill_History>);
			this._Bill_History1 = default(EntityRef<Bill_History>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_History_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bill_History_Id
		{
			get
			{
				return this._Bill_History_Id;
			}
			set
			{
				if ((this._Bill_History_Id != value))
				{
					if (this._Bill_History1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBill_History_IdChanging(value);
					this.SendPropertyChanging();
					this._Bill_History_Id = value;
					this.SendPropertyChanged("Bill_History_Id");
					this.OnBill_History_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="Int NOT NULL")]
		public int BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BillDate
		{
			get
			{
				return this._BillDate;
			}
			set
			{
				if ((this._BillDate != value))
				{
					this.OnBillDateChanging(value);
					this.SendPropertyChanging();
					this._BillDate = value;
					this.SendPropertyChanged("BillDate");
					this.OnBillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_History_Bill_History", Storage="_Bill_History2", ThisKey="Bill_History_Id", OtherKey="Bill_History_Id", IsUnique=true, IsForeignKey=false)]
		public Bill_History Bill_History2
		{
			get
			{
				return this._Bill_History2.Entity;
			}
			set
			{
				Bill_History previousValue = this._Bill_History2.Entity;
				if (((previousValue != value) 
							|| (this._Bill_History2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill_History2.Entity = null;
						previousValue.Bill_History1 = null;
					}
					this._Bill_History2.Entity = value;
					if ((value != null))
					{
						value.Bill_History1 = this;
					}
					this.SendPropertyChanged("Bill_History2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_History_Bill_History", Storage="_Bill_History1", ThisKey="Bill_History_Id", OtherKey="Bill_History_Id", IsForeignKey=true)]
		public Bill_History Bill_History1
		{
			get
			{
				return this._Bill_History1.Entity;
			}
			set
			{
				Bill_History previousValue = this._Bill_History1.Entity;
				if (((previousValue != value) 
							|| (this._Bill_History1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill_History1.Entity = null;
						previousValue.Bill_History2 = null;
					}
					this._Bill_History1.Entity = value;
					if ((value != null))
					{
						value.Bill_History2 = this;
						this._Bill_History_Id = value.Bill_History_Id;
					}
					else
					{
						this._Bill_History_Id = default(int);
					}
					this.SendPropertyChanged("Bill_History1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill_Items")]
	public partial class Bill_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<decimal> _Amout;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnAmoutChanging(System.Nullable<decimal> value);
    partial void OnAmoutChanged();
    #endregion
		
		public Bill_Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(120)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amout", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amout
		{
			get
			{
				return this._Amout;
			}
			set
			{
				if ((this._Amout != value))
				{
					this.OnAmoutChanging(value);
					this.SendPropertyChanging();
					this._Amout = value;
					this.SendPropertyChanged("Amout");
					this.OnAmoutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
